#!/usr/bin/env node

var path = require('path');
var exec = require('child_process').exec;
var program = require('commander');
var Q = require('Q');
var _ = require('lodash');
var request = require('request');
var pkg = require('../package.json');
var Spec = require('../lib/Spec');

Q.longStackSupport = true;

program.version(pkg.version);

program
  .command('build [dir]')
  .option('-o, --output <outputFile>', 'File to output blueprint to.')
  .description('Assemble API Blueprint from directory.')
  .action(function (dir, options) {
    if (options.output) {
      Spec
        .load(dir)
        .then(function (spec) {
          return spec.saveBlueprint(options.output);
        })
        .done(_.noop, function (err) {
          throw err;
        });
    } else {
      Spec
        .load(dir)
        .then(function (spec) {
          return spec.loadBlueprint();
        })
        .done(function (blueprint) {
          console.log(blueprint);
        }, function (err) {
          throw err;
        });
    }
  });

program
  .command('validate [dir]')
  .description('Test for spec errors.')
  .action(function (dir, options) {
    Spec
      .load(dir)
      .then(function (spec) {
        return spec.loadBlueprint();
      })
      .done(function (blueprint) {
        console.log('OK');
      }, function (err) {
        throw err;
      });
  });

program
  .command('test [dir] [baseUrl]')
  .description('Test API server against specs.')
  .option('-r, --reporter <reporter>', 'The mocha reporter to use.')
  .action(function (dir, baseUrl, options) {
    var testPath = path.resolve(__dirname, '../lib/endpointTests.js');
    var mochaPath = path.resolve(__dirname, '../node_modules/.bin/mocha');
    exec('SPEC_DIR=' + dir + ' BASE_URL=' + baseUrl + ' ' + mochaPath + ' --reporter ' + options.reporter + ' ' + testPath, function (err, stdout, stderr) {
      if (stdout) {
        process.stderr.write(stdout);
      }

      if (stderr) {
        process.stderr.write(stderr);
      }
    });
  });

program.parse(process.argv);
